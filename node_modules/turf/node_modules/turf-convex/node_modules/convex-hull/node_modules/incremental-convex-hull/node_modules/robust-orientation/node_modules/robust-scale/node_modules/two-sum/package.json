{
  "name": "two-sum",
  "version": "1.0.0",
  "description": "Computes a non-overlapping sequence representing the sum of two floating point numbers.",
  "main": "two-sum.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "~1.1.0"
  },
  "scripts": {
    "test": "tap test/*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/two-sum.git"
  },
  "keywords": [
    "two",
    "sum",
    "floating",
    "point",
    "robust",
    "exact"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/two-sum/issues"
  },
  "readme": "two-sum\n=======\nComputes the sum of two floating point numbers as a non-overlapping sequence using Knuth's method.\n\n* D.E. Knuth.  \"The Art of Computer Programming: Seminumerical Algorithms\".  Volume 2.  1981\n\n## Install\nUsing npm:\n\n\t\tnpm install two-sum\n\n\n## Example\n\n```javascript\nvar twoSum = require(\"two-sum\")\n\n//Add two wildly different sized floats\nvar result = twoSum(1e64, 1e-64)\nconsole.log(result)\n\n//Prints:\n//  [1e-64, 1e64]\n```\n\n## API\n\n### `require(\"two-sum\")(a, b[, result])`\nComputes a non-overlapping sequence representing the sum of a and b.\n\n* `a` is a number\n* `b` is a number\n* `result` is an optional length 2 array encoding the result of the sum of `a` and `b`\n\n**Returns** A length 2 array representing the non-overlapping sequence encoding the sum of a and b.  The first term has smaller magnitude than the second.\n\n## Credits\nBased on an idea from JRS robust geometric predicates paper.\n\nImplementation (c) 2013 Mikola Lysenko.  MIT License",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mikolalysenko/two-sum#readme",
  "_id": "two-sum@1.0.0",
  "_shasum": "31d3f32239e4f731eca9df9155e2b297f008ab64",
  "_resolved": "https://registry.npmjs.org/two-sum/-/two-sum-1.0.0.tgz",
  "_from": "two-sum@>=1.0.0 <2.0.0"
}
