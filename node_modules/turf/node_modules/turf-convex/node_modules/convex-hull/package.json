{
  "name": "convex-hull",
  "version": "1.0.3",
  "description": "Any dimensional convex hull",
  "main": "ch.js",
  "dependencies": {
    "affine-hull": "^1.0.0",
    "incremental-convex-hull": "^1.0.1",
    "monotone-convex-hull-2d": "^1.0.1"
  },
  "devDependencies": {
    "tape": "^3.0.3"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mikolalysenko/convex-hull.git"
  },
  "keywords": [
    "convex",
    "hull",
    "any",
    "dimension"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/convex-hull/issues"
  },
  "homepage": "https://github.com/mikolalysenko/convex-hull",
  "readme": "convex-hull\n===========\nThis module is a wrapper over various convex hull modules which exposes a simple interface for computing convex hulls of point sets in any dimension.\n\n# Example\n\n```javascript\nvar ch = require('convex-hull')\n\nvar points = [\n  [0,0],\n  [1,0],\n  [0,1],\n  [0.15,0.15],\n  [0.5, 0.5]\n]\n\n\n//Picture:\n//\n// [0,1] *\n//       |\\\n//       | \\\n//       |  \\\n//       |   \\\n//       |    \\\n//       |     \\\n//       |      \\\n//       |       * [0.5,0.5]\n//       |        \\\n//       |         \\\n//       |          \\\n//       |           \\\n//       |            \\\n//       |    *        \\\n//       | [0.15,0.15]  \\\n// [0,0] *---------------* [1,0]\n//\n\nconsole.log(ch(points))\n```\n\nOutput:\n\n```javascript\n[[0, 1], [1, 2], [2, 0]]\n```\n\n# Install\n\n```\nnpm install convex-hull\n```\n\nIf you want to use it in a webpage, use [browserify](http://browserify.org).\n\n# API\n\n#### `require('convex-hull')(points)`\nComputes the convex hull of `points`\n\n* `points` is an array of points encoded as `d` length arrays\n\n**Returns** A polytope encoding the convex hull of the point set.\n\n**Time complexity** The procedure takes O(n^floor(d/2) + n log(n)) time.\n\n**Note** This module is a wrapper over incremental-convex-hull and monotone-convex-hull for convenience.  It will select an optimal algorithm for whichever dimension is appropriate.\n\n\n# Credits\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "_id": "convex-hull@1.0.3",
  "_shasum": "20a3aa6ce87f4adea2ff7d17971c9fc1c67e1fff",
  "_resolved": "https://registry.npmjs.org/convex-hull/-/convex-hull-1.0.3.tgz",
  "_from": "convex-hull@>=1.0.3 <2.0.0"
}
